#!/usr/bin/env bash

set -e

# Apply Terraform IaC
pushd terraform
terraform init
terraform apply
BASTION_IP=$(terraform output bastion_ip)
popd

# Establish an SSH tunnel to Bastion
ssh -D 5000 -fNC ubuntu@$BASTION_IP -i <%= @values['kite']['private_key_path'] %>
export BOSH_ALL_PROXY=socks5://localhost:5000
echo "SSH tunnel created successfully"

# Render BOSH manifest and related files
kite render bosh

# Create new BOSH environment
bosh create-env bosh_director.yml --state=state.json --vars-store=creds.yml --vars-file=bosh_vars.yml --var-file private_key=<%= @values['kite']['private_key_path'] %> -o cpi.yml -o jumpbox-user.yml

# Configure alias for the new environment
bosh alias-env <%= @values['bosh']['name'] %> -e <%= @values['bosh']['static_ip'] %> --ca-cert <(bosh int ./creds.yml --path /director_ssl/ca)

# Get jumpbox user key
bosh int creds.yml --path /jumpbox_ssh/private_key > jumpbox.key
chmod 600 jumpbox.key

# Login to newly created BOSH Director
export BOSH_CLIENT=admin
export BOSH_CLIENT_SECRET=`bosh int ./creds.yml --path /admin_password`

echo "Successfully logged in to BOSH Directory"

# Render Concoure and related files
kite render concourse

# Update cloud-config
bosh -e <%= @values['bosh']['name'] %> update-cloud-config aws_cloud.yml

# Upload necessary stemcells to BOSH Director
bosh -e <%= @values['bosh']['name'] %> upload-stemcell https://bosh.io/d/stemcells/bosh-aws-xen-hvm-ubuntu-trusty-go_agent
bosh -e <%= @values['bosh']['name'] %> upload-release https://bosh.io/d/github.com/concourse/concourse
bosh -e <%= @values['bosh']['name'] %> upload-release https://bosh.io/d/github.com/cloudfoundry-incubator/garden-runc-release

# Deploy Concourse
bosh deployment concourse.yml
bosh deploy
