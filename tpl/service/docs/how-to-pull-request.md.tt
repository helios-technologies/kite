# Prerequisites

Before merging pull request, you should install:

1. [Kubernetes](https://kubernetes.io/docs/tasks/tools/install-kubectl/)

  - Download the binary for your OS
  - Unzip it and run `chmod +x kubectl && sudo mv kubectl /usr/local/bin/kubectl`
  - Check if the kubectl is installed by running `kubectl version`

2. [Vault](https://www.vaultproject.io/docs/install/index.html)

  - Download the binary for your OS
  - Unzip it and run `chmod +x vault && sudo mv vault /usr/local/bin/vault`
  - Check if the Vault is installed by running `vault -v`

3. [Google Cloud SDK](https://cloud.google.com/sdk/downloads)

  - Enter the following at a command prompt: `curl https://sdk.cloud.google.com | bash`
  - Restart your shell: `exec -l $SHELL`
  - Run gcloud init to initialize the gcloud environment: `gcloud init`

4. [Helm](https://github.com/kubernetes/helm/blob/master/docs/install.md)

  - Download the binary for your OS
  - Unzip it and run `chmod +x helm && sudo mv helm /usr/local/bin/helm`
  - Check if the Helm is installed by running `helm version`

5. [Concourse](https://github.com/concourse/fly)

  - Download the binary for your OS
  - Unzip it and run `chmod +x fly && sudo mv fly /usr/local/bin/fly`
  - Check if the fly is installed by running `fly -v`

## Manual

1. Test locally your docker image `make run`

2. Push docker image on Container Registry or Docker Hub `make push`

3. If you need to add/change/delete vault secret
  ```shell
  export VAULT_ADDR=<link-to-vault-storage>
  vault write concourse/<team>/<secret> value=<value> # save secret to storage
  vault read concourse/<team>/<secret> # read value of secret
  vault delete concourse/<team>/<secret> # delete secret
  ```

4. Push ready concourse pipeline to server `make ci`

5. Deploy helm chart `make deploy`. Using output of this command you can test your deployment:
  - Get pod name `export POD_NAME=$(kubectl get pods --namespace default -l "app=<%= @name %>,release=elder-ibis" -o jsonpath="{.i    tems[0].metadata.name}")`
  - Port-forward your deployment on localhost `kubectl port-forward $POD_NAME LOCAL_PORT:REMOTE_PORT`
  - Visit http://127.0.0.1:LOCAL_PORT to use your application
  - See current status of deployments `kubectl get deployments`, pods `kubectl get pods`, services `kubectl get service`
